# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
#    Do not use --file in mvn parameters, this causes issues with classpath loading when trying to use persistence modules.
    - name: Build Common Libraries
      run: ( cd ./common && mvn -B install )
    - name: Build Gateway service
      run: ( cd ./gateway && mvn -B install dockerfile:build )
    - name: Build Metadata service
      run: ( cd ./metadata && mvn -B install dockerfile:build )
    - name: Build Notify service
      run: ( cd ./notify && mvn -B install dockerfile:build )
    - name: Build Project service
      run: ( cd ./project && mvn -B install dockerfile:build )
    - name: Build User service
      run: ( cd ./user && mvn -B install dockerfile:build )
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Push images to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.TF_VARS_ecr_repository_name }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker ps
        docker push $ECR_REGISTRY/meggot/oulipo/gateway:LATEST
        docker push $ECR_REGISTRY/meggot/oulipo/metadata:LATEST
        docker push $ECR_REGISTRY/meggot/oulipo/notify:LATEST
        docker push $ECR_REGISTRY/meggot/oulipo/project:LATEST
        docker push $ECR_REGISTRY/meggot/oulipo/user:LATEST
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}